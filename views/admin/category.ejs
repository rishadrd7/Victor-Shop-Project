<%- include('../layouts/adminHeader')  %>


        <!-- partial -->
          <div class="main-panel">
            <div class="content-wrapper">
              <div class="page-header">
                <h3 class="page-title"> Catagory Tables </h3>

                <nav aria-label="breadcrumb">
                  <ol class="breadcrumb">
                    <button class="adc"  ><li class="breadcrumb-item"><a href="addCategory">Add Catagory</a></li></button>
                  
                  </ol>
                </nav>
              </div>
            <div class="row">
        


              <div class="col-lg-12 grid-margin stretch-card">
                <div class="card">
                  <div class="card-body">
                  
                   
                
                    <div class="table-responsive" >
                      <table class="table table-dark" style="color: white;">
                        <thead>
                          <tr>
                            <th>No</th>
                            <th>Category Name</th>
                            <th>Description</th>
                            <th>Action</th> 
                          </tr>
                        </thead>

                        <tbody>
                          <% locals?.categories?.forEach((category, index) => { %>
                            <tr>
                              <td><%= index + 1 %></td>
                              <td class="name"><%= category.name %></td>
                              <td class="description"><%= category.description %></td>

                              <td>

                                <!-- edit option -->
                                <a href="#" class="btn btn-primary edit-category" data-category-id="<%= category._id %>" data-category-name="<%= category.name %>" data-category-description="<%= category.description %>">Edit</a>

                                <!-- delete option -->
                                <!-- <a href="/admin/categories/delete/<%= category._id %>" class="btn btn-danger">Delete</a> -->


                                <!-- list and unlist option -->
                                <form id="toggleForm_<%= category._id %>" action="/admin/category/<%= category._id %>/toggle" method="post" style="display: inline;">
                                  <% if(category.listed){ %>
                                  <button id="toggleButton_<%= category._id %>"  type="button" onclick="submitForm('<%= category._id %>','<%= category.listed %>','<%= index %>')"  class="btn btn-warning" data-toggle="modal" data-target="#confirmationModal">
                                      <%= category.listed ? 'Unlist' : 'List' %>
                                  </button>
                                  <%}else{%>
                                    <button id="toggleButton_<%= category._id %>"  type="button" onclick="submitForm('<%= category._id %>','<%= category.listed %>','<%= index %>')"  class="btn btn-success" data-toggle="modal" data-target="#confirmationModal">
                                      <%= category.listed ? 'Unlist' : 'List' %>
                                  </button>
                                    <% } %>
                                  <input type="hidden" name="_method" value="PUT">
                                  <input type="hidden" name="listed" value="<%= !category.listed %>">
                              </form>
                              

                              
                        <!-- Bootstrap Modal for Confirmation -->
                    

                              
                              </td>
                              
                              
                            </tr>
                          <% }); %>
                        </tbody>
                      </table>
                      
                    </div>
                  </div>
                </div>
              </div>


            </div>
          </div>

          

          
<!-- SweetAlert CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11">

<!-- SweetAlert JS -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>


<!-- -------------------------------sumbit button list unlist-------------------------- -->
<script>
 async function submitForm(id,listed,i) {
  
  console.log(listed)
     const toggleButton = document.getElementById(`toggleButton_${id}`)
      const response = await axios.patch('/admin/list-unlist',{id,listed});

console.log(response.data.status);
      if(response.data.status){
        console.log('ininininin')
        toggleButton.classList.remove('btn-success');
        toggleButton.classList.add('btn-warning');
        toggleButton.innerHTML='Unlist'
        
      }else{
        console.log('in')
        toggleButton.classList.remove('btn-warning')
        toggleButton.classList.add('btn-success')
        toggleButton.innerHTML='List'
      }
  }
</script>


<!-- category list and unlist  -->
<script>
  async function toggleCategory(categoryId, listed) {
      try {
          const response = await fetch(`/admin/categories/${categoryId}/toggle`, {
              method: 'POST',
              headers: {
                  'Content-Type': 'application/json'
              },
              body: JSON.stringify({ listed: !listed })
          });

          if (!response.ok) {
              throw new Error('Failed to toggle category');
          }

          const button = document.getElementById(`toggleButton_${categoryId}`);
          button.classList.toggle('btn-warning');
          button.classList.toggle('btn-success');
          button.textContent = listed ? 'List' : 'Unlist';
      } catch (error) {
          console.error(error);
          // Handle error
      }
  }
</script>



    <!-- category edit function -->
<script>
  document.addEventListener("DOMContentLoaded", function() {
      // Get all elements with class "edit-category"
      const editButtons = document.querySelectorAll(".edit-category");
  
      // Add click event listener to each edit button
      editButtons.forEach(function(button) {
          button.addEventListener("click", function(event) {
              event.preventDefault(); // Prevent default link behavior
  
              // Extract data attributes
              const categoryId = button.getAttribute("data-category-id");
              let categoryName = button.getAttribute("data-category-name");
              let categoryDescription = button.getAttribute("data-category-description");
  
              // Open SweetAlert modal
              Swal.fire({
                
                  title: 'Edit Category',
                  html: `
                      <input type="text" id="categoryName" name="name" class="swal2-input" value="${categoryName}" placeholder="Category Name">
                      <textarea id="categoryDescription" description="description" class="swal2-textarea" placeholder="Category Description">${categoryDescription}</textarea>
                 
                  `,
                  showCancelButton: true,
                  confirmButtonText: 'Save',
                  cancelButtonText: 'Cancel',
                  preConfirm: () => {
                      // Retrieve edited values
                      const editedName = Swal.getPopup().querySelector('#categoryName').value;
                      const editedDescription = Swal.getPopup().querySelector('#categoryDescription').value;

                      // const name = document.querySelectorAll('.name');
                      // const description = document.querySelectorAll('.description');


                      fetch('/admin/update-category', {
                          method: 'POST',
                          headers: {
                              'Content-Type': 'application/json'
                          },
                          body: JSON.stringify({
                              categoryId: categoryId,
                              editedName: editedName,
                              editedDescription: editedDescription
                          })
                      })
                      .then(response => {
                          
                      })
                      .catch(error => {
                          console.error('Error:', error);
                      });
                    
  
                      // Return the edited values
                      return {
                          categoryName: editedName,
                          categoryDescription: editedDescription
                      };
                  }
              }).then((result) => {
                  // Update the button's data attributes with the edited values
                  button.setAttribute("data-category-name", result.value.categoryName);
                  button.setAttribute("data-category-description", result.value.categoryDescription);
              });
          });
      });
  });
  </script>
    
       

<%- include('../layouts/adminFooter')  %>
        