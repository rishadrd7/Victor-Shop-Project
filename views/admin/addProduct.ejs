<%- include('../layouts/adminHeader')  %>




  <title>Add Product Form</title>
  <style>

    /* Style for the form container */
    .form-container {
      display: flex;
      justify-content: space-between;
    }
    
    input[type="text"],
    input[type="number"],
    textarea {
      width: 50%;
      padding: 3px;
      border: 1px solid #ccc;
      border-radius: 5px;
      box-sizing: border-box;
    }

   
    .form-side {
      width: 38%; /* Adjust as needed */
    }
  </style>


<div class="main-panel">
<div class="content-wrapper">
  <button class="back-bt" style="float: right;"><li class="breadcrumb-item"><a href="products">Back</a></li></button>
  <h3>Add Product</h3>

  
  <form id="form" action="/admin/submit_product" method="post" enctype="multipart/form-data">
      <div class="form-container">
       <div class="form-side">
        
            <br><br>
            
            <label for="productName">Product Name:</label><br>
            <input type="text" id="productName" name="name" required><br><br>

            <label for="category">Category:</label><br>
          <select id="category" name="category" required>
              <option value="">Select Category</option>
              <!-- Iterate over categories and generate options -->
              <% category.forEach(category => { %>
                  <option value="<%= category._id %>"><%= category.name %></option>
              <% }); %>
          </select><br><br>

            <label for="price">Price:</label><br>
            <input type="number" id="price" name="price" min="0" required><br><br>

            <label for="offerPrice">Offer Price:</label><br>
        <input type="number" id="offerPrice" name="offerPrice" min="0" required><br><br>

           
        
      </div>

         <div class="form-side">
            <br><br><br>
              
              <label for="quantity">Quantity:</label><br>
              <input type="number" id="quantity" name="quantity" min="0" required><br><br>

              <label for="date">Date:</label><br>
              <input type="date" id="date" name="date" required><br><br>

              <label for="image">Image:</label><br>
              <input type="file" id="image" name="image" multiple  required><br><br>
              <label for="image">Image:</label><br>
              <input type="file" id="image" name="image" multiple  required><br><br>
              
              <!-- <input type="submit" value="Submit" class="sub" style="font-size: 20px; "> -->
            
              <input type="submit" value="Submit" class="sub" style="font-size: 20px;" id="submitButton">

            



                 </div>
              </div>
                
                
                      <label for="description">Description:</label><br>
                      <textarea id="description" name="description"  ></textarea><br><br>
                      
                  
            </form>
    


</div>
</div>




<script>
  document.addEventListener('DOMContentLoaded', function() {
      const form = document.getElementById('form');
      form.addEventListener('submit', async function(event) {
          event.preventDefault(); // Prevent the default form submission
  
          const name = document.getElementById('productName').value.trim(); // Trim white spaces
          const price = document.getElementById('price').value;
          const offerPrice = document.getElementById('offerPrice').value;
          const quantity = document.getElementById('quantity').value;
          const image = document.getElementById('image').files.length;
  
          // Check if name is empty or contains only white spaces
          if (!name || name.length === 0) {
              Swal.fire({
                  icon: 'error',
                  title: 'Oops...',
                  text: 'Product name cannot be empty or contain only white spaces!',
              });
              return; // Stop further execution if name is invalid
          } else if (price <= 0 || offerPrice <= 0 || quantity <= 0 || image === 0) {
              Swal.fire({
                  icon: 'error',
                  title: 'Oops...',
                  text: 'Price, offer price, quantity, and image must be valid!',
              });
              return; // Stop further execution if other validations fail
          }
  
          // If all validations pass, submit the form
          const formData = new FormData(form);
          try {
              const response = await fetch('/admin/submit_product', {
                  method: 'POST',
                  body: formData
              });
  
              const data = await response.json();
              if (response.ok) {
                  // Redirect or show success message
                  Swal.fire({
                      icon: 'success',
                      title: 'Success',
                      text: data.message,
                      onClose: () => {
                          window.location.href = data.redirectUrl;
                      }
                  });
              } else {
                  // Show error message
                  Swal.fire({
                      icon: 'error',
                      title: 'Oops...',
                      text: data.message,
                  });
              }
          } catch (error) {
              console.error('Error:', error);
              Swal.fire({
                  icon: 'error',
                  title: 'Oops...',
                  text: 'An unexpected error occurred.',
              });
          }
      });
  });
  </script>
  
  

<!-- date showing add product page-->
<script>
  document.addEventListener('DOMContentLoaded', () => {
      // Get today's date
      const today = new Date();
  
      // Format the date as 'YYYY-MM-DD' for input element
      const formattedDate = today.toISOString().split('T')[0];
  
      // Set the value of the date input element
      document.getElementById('date').value = formattedDate;
  });
  </script>


<!-- product add sumbit option -->
<script>
document.addEventListener("DOMContentLoaded", function() {
  const submitButton = document.getElementById("submitButton");

  submitButton.addEventListener("click", async function() {
    try {
      const formData = new FormData(document.getElementById('submitButton')); // Use the form ID directly

      // Make a fetch request to submit the form data
      const response = await fetch('/admin/products', {
        method: 'POST',
        body: formData
      });

      if (response.ok) {
        Swal.fire({
          title: "Success!",
          text: "Product added successfully!",
          icon: "success"
        });
      } else {
        console.error('Failed to add product');
        // Handle error if needed
      }
    } catch (error) {
      console.error('Error:', error);
      // Handle error if needed
    }
  });
});

</script>



<!-- image crop -->
  <script defer src="https://cdn.crop.guide/loader/l.js?c=NXCRCZ"></script>

  <!-- sweetalert2 -->
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

  <link href="https://cdn.jsdelivr.net/npm/@sweetalert2/theme-dark@4/dark.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.js"></script>




  <%- include('../layouts/adminFooter')  %>